groups:
  - name: admin
    jobs:
      - base-traffic
      - load-test
      - load-test-end-game
      - backfill-db
      - splunk
      - az_failure
      - gdpr-check
      - troll
      - cost
      - hide_splunk_key

resources:
  - name: every-60-s
    type: time
    source:
      interval: 60s

  - name: every-120-s
    type: time
    source:
      interval: 120s

  - name: gds-techops-gameday-git
    type: git
    source:
      uri: git@github.com:tlwr/gds-techops-gameday.git
      branch: master
      private_key: ((read_only_ssh_private_key))

jobs:
  - name: base-traffic
    serial: true
    plan:
      - try:
        task: swarm
        config:
          params:
            TEAM: ((team))
            APP_DIFFICULTY: ((app_difficulty))
            POINTS: ((points))
            SWARM_SCALE_UP: ((swarm_scale_up))
            SWARM_SCALE_DOWN: ((swarm_scale_down))
            CHANCE: ((chance))
            TIMEOUT: 10

          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: alexkinnanegds/locust

          run:
            path: /usr/local/bin/locust
            args:
              - "--locustfile=/app/locust.py"
              - "--clients=1"
              - "--hatch-rate=1"
              - "--no-web"
              - "--host=https://((team)).game.gds-reliability.engineering"

  - name: load-test
    serial: true
    plan:
      - try:
          task: Agressive Swarm
          config:
            params:
              TEAM: ((team))
              APP_DIFFICULTY: ((app_difficulty))
              POINTS: ((points))
              SWARM_SCALE_UP: 5
              SWARM_SCALE_DOWN: 5

            platform: linux
            image_resource:
              type: docker-image
              source:
                repository: alexkinnanegds/locust

            run:
              path: /usr/local/bin/locust
              args:
                - "--locustfile=/app/locust.py"
                - "--clients=5"
                - "--hatch-rate=1"
                - "--no-web"
                - "--run-time=15m"
                - "--host=https://((team)).game.gds-reliability.engineering"

  - name: load-test-end-game
    serial: true
    plan:
      - try:
          task: END GAME
          config:
            params:
              TEAM: ((team))
              APP_DIFFICULTY: ((app_difficulty))
              POINTS: ((points))
              SWARM_SCALE_UP: 3
              SWARM_SCALE_DOWN: 5

            platform: linux
            image_resource:
              type: docker-image
              source:
                repository: alexkinnanegds/locust

            run:
              path: /usr/local/bin/locust
              args:
                - "--locustfile=/app/locust.py"
                - "--clients=40"
                - "--hatch-rate=3"
                - "--no-web"
                - "--run-time=15m"
                - "--host=https://((team)).game.gds-reliability.engineering"

  - name: gdpr-check
    serial: true
    plan:
      - try:
          task: gdpr-check
          config:
            params:
              TEAM: ((team))
              POINTS: ((gdpr_points))
              DB_HOST: ((db_host))
              DB_NAME: app
              DB_USER: app
              DB_PASS: ((database_password))

            platform: linux
            image_resource:
              type: docker-image
              source:
                repository: alexkinnanegds/gdpr-check

            run:
              path: /app/gdpr_check.py

  - name: backfill-db
    serial: true
    plan:
      - get: gds-techops-gameday-git

      - task: backfill
        config:
          params:
            DB_HOST: ((db_host))
            DB_PASS: ((database_password))
            DB_NAME: app
            DB_USER: app

          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: tlwr/ruby-pg

          inputs:
            - name: gds-techops-gameday-git

          run:
            path: ruby
            dir: gds-techops-gameday-git
            args: ['scripts/backfill-db.rb']

  - name: splunk
    serial: true
    plan:
      - get: gds-techops-gameday-git

      - task: bootstrap-splunk
        config:
          params:
            SPLUNK_URL: https://splunk-admin.zero.game.gds-reliability.engineering
            SPLUNK_PASS: ((splunk_pass))
            IDENTIFIER: gameday-((team))

          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: ruby
              tag: '2.6'

          inputs:
            - name: gds-techops-gameday-git

          run:
            path: ruby
            dir: gds-techops-gameday-git
            args: ['scripts/bootstrap-splunk.rb']


  - name: az_failure
    serial: true
    plan:
      - try:
        task: Disable AZ A
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: alexkinnanegds/az_failure
          run:
            path: /app/az_failure.py
            args:
              - "--region"
              - eu-west-2
              - "--az"
              - ((az_failure_zone))
              - "--duration"
              - ((az_failure_duration))
              - "--arn"
              - ((bootstrap_role))

  - name: hide_splunk_key
    serial: true
    plan:
      - try:
        task: hide_the_key
        config:
          params:
            ARN: ((bootstrap_role))
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: alexkinnanegds/az_failure
          run:
            path: /app/splunk_token.py

  - name: cost
    serial: true
    plan:
      - get: every-120-s
        trigger: true

      - try:
        task: cost
        config:
          params:
              TEAM: ((team))
              POINTS: ((cost))
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: alexkinnanegds/az_failure
          run:
            path: /app/cost.py
            args:
              - "--region"
              - eu-west-2
              - "--arn"
              - ((bootstrap_role))


  - name: troll
    serial: true
    plan:
      - get: every-60-s
        trigger: true

      - try:
        task: Send a troll and check they get logged
        config:
          params:
              TEAM: ((team))
              APP_DIFFICULTY: ((app_difficulty))
              POINTS: ((points))
              SPLUNK_HOST: splunk-admin.zero.game.gds-reliability.engineering
              SPLUNK_USER: admin
              SPLUNK_PASS: ((splunk_pass))
              TROLL_POINTS: ((troll_points))
              SPLUNK_TOKEN: ((splunk_token))
              ENV: prod

          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: alexkinnanegds/troll
          run:
            path: /usr/local/bin/python
            args:
              - /app/troll.py
